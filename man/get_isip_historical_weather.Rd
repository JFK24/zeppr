% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_isip_data.R
\name{get_isip_historical_weather}
\alias{get_isip_historical_weather}
\title{Gets ISIP Interpolated Hourly Weather Data}
\usage{
get_isip_historical_weather(
  lat,
  lon,
  start_date = NA,
  end_date = NA,
  name = "Test",
  token,
  url,
  retries = 3,
  sleep_time = 3
)
}
\arguments{
\item{lat}{(dbl) latitude in degree of point of interest}

\item{lon}{(dbl) longitude in degree of point of interest}

\item{start_date}{(chr) Date formatted as YYYY-MM-DD (e.g. 2022-06-30).
The function will return historical data from this date if properly defined,
or from 1991-01-01 if \code{NA} (1991-01-01 is the first available date)}

\item{end_date}{(chr) Date formatted as YYYY-MM-DD (e.g. 2022-06-30).
The function will return historical data until this date if properly defined,
or until yesterday if \code{NA} (the date of yesterday is the last available date)}

\item{name}{(chr) location name}

\item{token}{(chr) Valid API token retrieved from \code{get_isip_charts_token}}

\item{url}{(chr) API URL}

\item{retries}{(int) number of times to retry if an error occurs during download}

\item{sleep_time}{(int) number of seconds between 2 retries}
}
\value{
(data.frame) a table of hourly weather data defined by the following columns:
id (chr) (the input \code{name} value),
lat (dbl) (latitude),
lon (dbl) (longitude),
date_time (chr) (e.g. 2022-04-03T00:00:00),
TAIR200 (dbl) (average air temperature, Â°C),
HUMAIR200 (dbl) (daily average relative humidity, \%),
GRH200 (dbl) (daily sum global radiation, W/m2),
PRECIP100 (dbl) (hourly sum precipitation, mm)
}
\description{
ISIP is an online service (isip.de).
Hourly data is available from past dates today and the next2 days.
The hourly data is provided as raster data. A raster has an area of
1 x 1km2 and is defined within a grid over Germany.
}
\examples{
  \dontrun{
    # Get token
    secrets <- read.delim("secrets.tsv", sep="\t")
    user <- secrets[secrets$key=="charts_api_user",]$value
    passwd <- secrets[secrets$key=="charts_api_pass",]$value
    charts_api_token_url <- secrets[secrets$key=="charts_api_token_url",]$value
    token <- get_isip_charts_token(
      user=user, passwd=passwd, url=charts_api_token_url, verbose = TRUE)

    # Input parameters
    charts_api_server_url <- secrets[secrets$key=="charts_api_server_url",]$value
    field_name <- 'test_near_ingelheim'
    lat <- '49.998521'
    lon <- '8.070207'
    start_date <- '2022-04-03T00:00'
    end_date <- '2025-04-04T00:00'

    # Request hourly values
    weather_data <- get_isip_historical_weather(
      lat=lat, lon=lon, start_date=start_date, end_date=end_date, name=field_name,
      token=token, url=charts_api_server_url
    )
  }
}
