% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_isip_weather_data.R
\name{read_isip_hourly_weather_data}
\alias{read_isip_hourly_weather_data}
\title{Reads ISIP Hourly Weather Data File}
\usage{
read_isip_hourly_weather_data(
  excel.path,
  returns.daily.data = FALSE,
  drop.irrelvant.cols = TRUE
)
}
\arguments{
\item{excel.path}{(chr) path to ISIP hourly weather export data file (Excel
file). ISIP's Excel Data format as of Dec 2022.}

\item{returns.daily.data}{(boolean) returns daily data if \code{TRUE},
hourly data otherwise}

\item{drop.irrelvant.cols}{(boolean) remove irrelevant columns if \code{TRUE},
keep all columns otherwise}
}
\value{
(data.frame) table with numerical columns except for location (\code{chr})
and date (\code{Date} class for daily output or \code{POSIXct} class for hourly
output). Columns: \code{location}, \code{date}, \code{Tmin} (min daily temperature),
\code{temperature} (hourly or averaged daily temperature),
\code{Tmax} (max daily temperature), \code{humidity}, \code{precipitation}, \code{radiation},
\code{wind_speed}, \code{n.hours} (scope of the data as number of hours, e.g. used to
calculate averages).
}
\description{
Reads an ISIP hourly weather export data file (Excel file; one row per hour)
and returns a data frame with either hourly or daily data.
The daily data is derived from the hourly data by averaging values per day.
All sheets from the Excel file are processed and gathered in the same table.
Within an ISIP Excel file, each sheet represent a particular geographical
location and contains weather data for the same date and time range.
Sheet names provides the location ids after trimming a suffix
starting from the last underscore character.
}
\examples{
# Let us use an example dataset:
file.name <- "20221215_isip_hourly_weather_data_export.xlsx"
path <- system.file("extdata", file.name, package = "zeppr")
# Get hourly data:
hourly.table <- read_isip_hourly_weather_data(path)
head(hourly.table)
# Get daily data:
daily.table <- read_isip_hourly_weather_data(path, returns.daily.data=TRUE)
head(daily.table)
}
